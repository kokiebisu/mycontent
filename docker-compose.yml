services:
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    networks:
      - mycontent-network
    ports:
      - "5433:5432"

  service-authentication:
    container_name: service-authentication
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./packages/service-authentication/Dockerfile.dev
    networks:
      - mycontent-network
    ports:
      - "4001:4001"
    volumes:
      - ./packages/service-authentication:/app/packages/service-authentication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/playground"]
      interval: 5s
      timeout: 3s
      retries: 5

  service-blog:
    container_name: service-blog
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./packages/service-blog/Dockerfile.dev
    networks:
      - mycontent-network
    environment:
      GRAPHQL_PORT: "4002"
      DB_PORT: "5432"
      DB_HOST: "db"
      DB_USER: "postgres"
      DB_NAME: "mydb"
      DB_PASSWORD: "mypassword"
    ports:
      - "4002:4002"
      - "50051:50051"
    volumes:
      - ./packages/service-blog:/app/packages/service-blog
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/playground"]
      interval: 5s
      timeout: 3s
      retries: 5

  service-user:
    container_name: service-user
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./packages/service-user/Dockerfile.dev
    networks:
      - mycontent-network
    ports:
      - "4003:4003"
    volumes:
      - ./packages/service-user:/app/packages/service-user
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/playground"]
      interval: 5s
      timeout: 3s
      retries: 5

  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./packages/gateway/Dockerfile.dev
    depends_on:
      service-authentication:
        condition: service_healthy
      service-user:
        condition: service_healthy
      service-blog:
        condition: service_healthy
    networks:
      - mycontent-network
    ports:
      - "4000:4000"
    volumes:
      - ./packages/gateway/src:/app/src

networks:
  mycontent-network:
    driver: bridge
