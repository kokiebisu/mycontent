extend type User {
  id: ID! @external
  interest: Interest!
}

type Blog @key(fields: "id") {
  id: ID!
  user_id: String!
  title: String!
  url: String!
  createdAt: String!
}

type Integration @key(fields: "id") {
  id: ID!
  platform: Platform!
  apiKey: String!
  userId: ID!
  createdAt: String!
  updatedAt: String!
}

type Query {
  blog(id: ID!): Blog!
  blogs: [Blog!]!
  blogsByUserId(userId: ID!): [Blog!]!
  integration(id: ID!): Integration!
  integrationsByUserId(userId: ID!, platform: Platform!): [Integration!]!
}

type Mutation {
  deleteBlog(id: ID!): String!
  deleteIntegration(id: ID!): String!
  createPresignedUrl(input: CreatePresignedUrlInput!): PresignedUrlResponse!
}

input CreatePresignedUrlInput {
  bucketName: String!
  fileName: String!
  fileType: String!
}

type PresignedUrlResponse {
  url: String!
  key: String!
}

enum Interest {
  REACT
  NODEJS
  PYTHON
  GO
  RUST
  DOCKER
  KUBERNETES
}

enum Platform {
  ZENN
  QIITA
  MEDIUM
}
