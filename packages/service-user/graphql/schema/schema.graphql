type User @key(fields: "id") {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  username: String!
  password: String!
  interest: Interest!
  yearsOfExperience: Int!
  publishTime: String!
  createdAt: String!
  updatedAt: String!
}

type Query {
  user(id: ID!): User!
  users: [User!]!
}

type Mutation {
  createUser(input: CreateUserInput): User!
  updateUser(id: ID!, input: UpdateUserInput): User!
  deleteUser(id: ID!): String!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  username: String!
  password: String!
  interest: Interest!
  yearsOfExperience: Int!
  publishTime: String!
}

input UpdateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  username: String!
  password: String!
  interest: Interest!
  yearsOfExperience: Int!
  publishTime: String!
}

enum Interest {
  REACT
  NODEJS
  PYTHON
  GO
  RUST
  DOCKER
  KUBERNETES
}
