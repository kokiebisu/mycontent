package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.48

import (
	"context"

	"github.com/kokiebisu/mycontent/packages/service-authentication/graphql/generated"
	"github.com/kokiebisu/mycontent/packages/shared/ent"
)

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id string) (*ent.User, error) {
	user, err := r.UserServiceClient.GetUserById(ctx, id)
	if err != nil {
		return nil, err
	}

	return &ent.User{
		ID:                user.ID,
		FirstName:         user.FirstName,
		LastName:          user.LastName,
		Email:             user.Email,
		Username:          user.Username,
		Interest:          user.Interest,
		YearsOfExperience: int(user.YearsOfExperience),
		PublishTime:       user.PublishTime,
	}, nil
}

// Entity returns generated.EntityResolver implementation.
func (r *Resolver) Entity() generated.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
